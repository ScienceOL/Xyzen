# This is a .env file for PROTIUM service configuration.
# .env.dev file for local development environment
# .env.local file for test environment which is used to full-stack test
# .env.uat file for user acceptance test environment
# .env.prod file for production environment

# =========================================================================
# INIT Configuration
# =========================================================================
# Default superuser email for initial setup
# Default: admin@example.com
# SUPERUSER_EMAIL=admin@example.com

# Default superuser username for initial setup
# Default: PROTIUM
# SUPERUSER_USERNAME=PROTIUM

# Default superuser password for initial setup
# Default: admin
# SUPERUSER_PASSWORD=admin

# If set to True, the Service will collect static files, just enable once during initial setup
# Default: False
# COLLECT_STATICS=True

# Modules to be installed during the initial setup
# Default: protium
# MODULES=workflow,chat,document,space,environment

# =========================================================================
# Django Core Settings & Security
# =========================================================================
# Cryptographic key for hashing and security-related functions
# WARNING: Keep this secret in production environments, 
# you can generate a new key using the following command:
# openssl rand -base64 32 | tr -d '\n'
SECRET_KEY='<replace-with-your-secure-key>'

# Runtime environment specification (development/production)
# Default: development
# ENV=development

# Debug mode configuration
# WARNING: Never enable in production (exposes sensitive data)
# Default: True
# DEBUG=True

# Service host workers, the value should be positive int, set none for full CPU utilization
# Workers=1

# Allowed host/domain names for security validation
# Comma-separated list of FQDNs or IP addresses
# Default: 127.0.0.1,localhost
# ALLOWED_HOSTS=127.0.0.1,localhost

# =========================================================================
# CORS & CSRF Configuration 
# =========================================================================
# Enable Cross-Origin Resource Sharing for all domains
# Recommended for API development, disable in production
# Default: True
# CORS_ALLOW_ALL_ORIGINS=True

# Whitelist for CORS allowed origins (commented example)
# Default: http://127.0.0.1, http://localhost
# CORS_ORIGIN_WHITELIST=http://localhost:3000

# Trusted origins for CSRF protection (commented example)
# Default: http://127.0.0.1, http://localhost
# CSRF_TRUSTED_ORIGINS=http://localhost:3000

# =========================================================================
# Authentication & JWT Settings
# =========================================================================
# Access token validity duration in seconds (1 hour)
# Default: 30
# ACCESS_TOKEN_LIFETIME=30

# Refresh token validity duration in days (2 weeks)
# REFRESH_TOKEN_LIFETIME=14

# SameSite policy for JWT cookies (commented example)
# Default: None
# JWT_COOKIE_SAMESITE=Lax

# Restrict JWT cookies to HTTPS-only transport
# Disabled for development, enable in production
# Default: False
# JWT_COOKIE_SECURE=True

# Domain restriction for JWT cookies (commented example)
# Default: None
# JWT_COOKIE_DOMAIN= "127.0.0.1"

# =========================================================================
# Database Configuration
# =========================================================================
# Database adapter specification
# DATABASE_ENGINE=django.db.backends.postgresql

# Database server network location
# DATABASE_HOST=db

# Database name for application data
# DATABASE_NAME=protium

# Database authentication credentials
# DATABASE_USER=postgres

# Database authentication password
# Default: postgres
# DATABASE_PASSWORD=<replace-with-database-password>

# Database server connection port
# DATABASE_PORT=5432

# =========================================================================
# S3 Object Storage
# =========================================================================
# Access key ID for S3-compatible storage
AWS_ACCESS_KEY_ID=<replace-with-access-key>

# Secret access key for S3-compatible storage
AWS_SECRET_ACCESS_KEY=<replace-with-secret-key>

# Default bucket name for object storage
AWS_STORAGE_BUCKET_NAME=protium

# Custom endpoint URL for S3 service
AWS_S3_ENDPOINT_URL=https://<replace-with-storage-endpoint>

# =========================================================================
# Elasticsearch Configuration (Disabled)
# =========================================================================
# Elasticsearch authentication password (commented example)
# ELASTICSEARCH_PASSWORD = "qG1py5cIh6twr0PqvJ4f"

# Elasticsearch authentication username (commented example)
# ELASTICSEARCH_USERNAME = "elastic"

# Elasticsearch server endpoint (commented example)
# ELASTICSEARCH_HOST = "http://elasticsearch:9200"

# =========================================================================
# Redis Configuration
# =========================================================================
# Redis server hostname
REDIS_HOST=redis

# Redis server port
REDIS_PORT=6379

# Redis database index (0-15)
REDIS_DB=0

# Redis password (optional, leave empty for no authentication)
REDIS_PASSWORD=

# =========================================================================
# Channel Layers Configuration
# =========================================================================
# Use Redis as channel layer backend in production
# Set to "channels.layers.InMemoryChannelLayer" for development
CHANNEL_LAYER_BACKEND=channels_redis.core.RedisChannelLayer

# =========================================================================
# Email Service Configuration
# =========================================================================
# SMTP server hostname for email delivery
EMAIL_HOST="<replace-with-smtp-server>"

# SMTP authentication username
EMAIL_HOST_USER="<replace-with-smtp-username>"

# SMTP authentication password
EMAIL_HOST_PASSWORD=<replace-with-smtp-password>

# =========================================================================
# DFlow Workflow System
# =========================================================================
# Enable/disable DFlow workflow integration
DFLOW_ENABLE=False
# If DFLOW_ENABLE=True, the following settings are required
# -------------------------------------------------------------------------
# Authentication token for DFlow API access
# DFLOW_TOKEN=<replace-with-dflow-token>

# Base URL for DFlow service endpoint
# DFLOW_HOST="https://<replace-with-dflow-endpoint>"

# S3-compatible storage endpoint
# DFLOW_S3_ENDPOINT=<replace-with-s3-endpoint>

# Web console URL for storage management
# DFLOW_S3_CONSOLE="https://<replace-with-storage-console>"

# Access key for object storage
# DFLOW_S3_ACCESS_KEY=<replace-with-s3-access-key>

# Secret key for object storage
# DFLOW_S3_SECRET_KEY=<replace-with-s3-secret-key>

# Enable HTTPS for storage connections
# DFLOW_S3_SECURE=True

# Default bucket name for workflow storage
# DFLOW_S3_BUCKET_NAME="argo"

# =========================================================================
# MQTT Message Broker
# =========================================================================
# Enable/disable MQTT message bus integration
MQTT_ENABLE=False
# If MQTT_ENABLE=True, the following settings are required
# -------------------------------------------------------------------------
# MQTT Username for authentication
# MQTT_USERNAME=<replace-with-mqtt-username>

# MQTT Password for authentication
# MQTT_PASSWORD=<replace-with-mqtt-password>

# MQTT broker connection URL
# MQTT_BROKER_URL="<replace-with-mqtt-broker-url>"

# Unique instance identifier for MQTT service
# MQTT_INSTANCE_ID=<replace-with-instance-id>

# Access key for MQTT authentication
# MQTT_ACCESS_KEY=<replace-with-mqtt-access-key>

# Secret key for MQTT authentication
# MQTT_SECRET_KEY=<replace-with-mqtt-secret-key>

# Consumer group identifier for message processing
# MQTT_GROUP_ID=<replace-with-group-id>

# MQTT Certificate directory
# Default: /app/.certs
# MQTT_CERTS_DIR=/app/.certs

# =========================================================================
# Laboratory Results Management System
# =========================================================================
# Enable/disable Lab_MinIO storage integration
LAB_MINIO_ENABLE=False
# If LAB_MINIO_ENABLE=True, the following settings are required
# -------------------------------------------------------------------------
# MinIO access key
# MINIO_ACCESS_KEY=<YourMinioAccessKey>

# MinIO secret
# MINIO_SECRET_KEY=<YourMinioSecretKey>

# MinIO endpoint
# MINIO_ENDPOINT=<YourMinioEndpoint>

# MinIO bucket
# MINIO_BUCKET=<YourMinioBucket>

# MinIO API version, default: s3v4
# MINIO_API=s3v4

# MinIO path style, default: auto
# MINIO_PATH=auto

# =========================================================================
# Frontend Dev Configuration (Not Effective in Production)
# =========================================================================
# Below settings are only effective in prodcution environments because it 
# has fixed during build process.
# -------------------------------------------------------------------------
# Node.js runtime environment specification
NODE_ENV=development

# Application platform identifier
PLATFORM=Protium

# Base URL for frontend deployment
NEXT_PUBLIC_SITE_URL=http://127.0.0.1:32234

# API endpoint base URL
NEXT_PUBLIC_BASE_URL=http://127.0.0.1:48197/api

# Media assets serving URL
NEXT_PUBLIC_MEDIA_URL=http://127.0.0.1:48197

# WebSocket service endpoint URL
NEXT_PUBLIC_WS_URL=ws://127.0.0.1:48197

# =========================================================================
# Development Settings
# =========================================================================
# Windows users may need to set the following environment variable
# to enable polling for file changes in the development environment
# Default: False
# WATCHPACK_POLLING=True

# 


# =========================================================================
# OAuth2.0 Configuration
# =========================================================================

# -------------------------------------------------------------------------
# Bohrium OAuth2.0 
# -------------------------------------------------------------------------
# Bohrium OAuth2.0 client ID
NEXT_PUBLIC_BRM_OAUTH_CLIENT_ID="aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
BOHRIUM_APP_KEY="example-app"

# Bohrium OAuth2.0 client secret
BRM_OAUTH_CLIENT_SECRET="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890abcdefghijklmnopqrstuvwxyzAB"

# Bohrium OAuth2.0 URL
NEXT_PUBLIC_BRM_OAUTH_URL="https://example.platform.com"

BOHRIUM_ACCOUNT_AUTH_TOKEN="Bearer aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"

# =========================================================================
# Third-party API Configuration
# =========================================================================
BOHRIUM_ACCOUNT_API_BASE_URL="https://example-account.platform.com"

# =========================================================================
# Azure OpenAI Configuration 
# =========================================================================
# Azure OpenAI API key
AZURE_OPENAI_API_KEY="your-api-key-here"

# Azure OpenAI endpoint URL
AZURE_OPENAI_ENDPOINT="https://your-resource-name.openai.azure.com/"

# Azure OpenAI API version
AZURE_OPENAI_VERSION="2023-07-01-preview"

# Azure OpenAI deployment model name (the deployment name in your Azure portal)
AZURE_OPENAI_DEPLOYMENT_MODEL="gpt-4"

