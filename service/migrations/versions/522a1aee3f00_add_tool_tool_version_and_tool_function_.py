"""Add tool, tool_version, and tool_function tables

Revision ID: 522a1aee3f00
Revises: a857da5c3a97
Create Date: 2025-10-03 22:53:25.861145

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "522a1aee3f00"
down_revision: Union[str, Sequence[str], None] = "a857da5c3a97"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tool",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("tags_json", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tool_name"), "tool", ["name"], unique=True)
    op.create_table(
        "toolversion",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("requirements", sa.Text(), nullable=True),
        sa.Column("code_content", sa.Text(), nullable=True),
        sa.Column("status", sa.Enum("BUILDING", "READY", "FAILED", "DEPRECATED", name="toolstatus"), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("tool_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tool_id"],
            ["tool.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_toolversion_status"), "toolversion", ["status"], unique=False)
    op.create_index(op.f("ix_toolversion_version"), "toolversion", ["version"], unique=False)
    op.create_table(
        "toolfunction",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("function_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("docstring", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("input_schema", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("output_schema", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("tool_version_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tool_version_id"],
            ["toolversion.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("toolfunction")
    op.drop_index(op.f("ix_toolversion_version"), table_name="toolversion")
    op.drop_index(op.f("ix_toolversion_status"), table_name="toolversion")
    op.drop_table("toolversion")
    op.drop_index(op.f("ix_tool_name"), table_name="tool")
    op.drop_table("tool")
    # ### end Alembic commands ###
